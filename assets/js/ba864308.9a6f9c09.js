"use strict";(self.webpackChunkservice=self.webpackChunkservice||[]).push([[8276],{7582:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=t(5893),i=t(1151);const r={title:"\ud83d\udcbe Installation",description:"Hole\u0161ky Operator installation guide.",image:"./img/EigenLayer-Service-Cover.jpg",keywords:["EigenLayer","restake","Hole\u0161ky","installation","Holesky"]},l="EigenLayer Hole\u0161ky Operat\xf6r Installation",s={id:"Testnet/eigenlayer/installation",title:"\ud83d\udcbe Installation",description:"Hole\u0161ky Operator installation guide.",source:"@site/docs/Testnet/eigenlayer/installation.md",sourceDirName:"Testnet/eigenlayer",slug:"/Testnet/eigenlayer/installation",permalink:"/docs/Testnet/eigenlayer/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/AnatolianTeam/Anatolian-Team-Services/tree/master/docs/Testnet/eigenlayer/installation.md",tags:[],version:"current",frontMatter:{title:"\ud83d\udcbe Installation",description:"Hole\u0161ky Operator installation guide.",image:"./img/EigenLayer-Service-Cover.jpg",keywords:["EigenLayer","restake","Hole\u0161ky","installation","Holesky"]},sidebar:"tutorialSidebar",previous:{title:"EigenLayer Network",permalink:"/docs/Testnet/eigenlayer/"},next:{title:"\ud83d\udc64 User Guide",permalink:"/docs/Testnet/eigenlayer/user-guide"}},o={image:t(7845).Z},d=[{value:"Updating the System",id:"updating-the-system",level:2},{value:"Installing the Necessary Libraries",id:"installing-the-necessary-libraries",level:2},{value:"Installing Go",id:"installing-go",level:2},{value:"Create and List Keys",id:"create-and-list-keys",level:2},{value:"Creating New Key",id:"creating-new-key",level:3},{value:"Create ECDSA Key",id:"create-ecdsa-key",level:4},{value:"Create BLS Key",id:"create-bls-key",level:4},{value:"Import Keys",id:"import-keys",level:3},{value:"Listing Keys",id:"listing-keys",level:3},{value:"Export keys",id:"export-keys",level:3},{value:"Export ECDSA Key",id:"export-ecdsa-key",level:4},{value:"Export BLS Key",id:"export-bls-key",level:4},{value:"Obtaining Hole\u0161ky ETH",id:"obtaining-hole\u0161ky-eth",level:2},{value:"Operator Registration",id:"operator-registration",level:2},{value:"Creating Config Files",id:"creating-config-files",level:3},{value:"Create metadata.json File",id:"create-metadatajson-file",level:4},{value:"Edit operator.yaml File",id:"edit-operatoryaml-file",level:4},{value:"Registration",id:"registration",level:3},{value:"Checking Status of Registration",id:"checking-status-of-registration",level:2},{value:"Metadata Updates",id:"metadata-updates",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"eigenlayer-hole\u0161ky-operat\xf6r-installation",children:"EigenLayer Hole\u0161ky Operat\xf6r Installation"}),"\n",(0,a.jsx)(n.h2,{id:"updating-the-system",children:"Updating the System"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"apt update && apt upgrade -y\n"})}),"\n",(0,a.jsx)(n.h2,{id:"installing-the-necessary-libraries",children:"Installing the Necessary Libraries"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'apt install make clang pkg-config libssl-dev libclang-dev build-essential git curl ntp jq llvm gcc -y < "/dev/null"\n\n'})}),"\n",(0,a.jsx)(n.h2,{id:"installing-go",children:"Installing Go"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"ver=\"1.21.6\"\nwget \"https://golang.org/dl/go$ver.linux-amd64.tar.gz\"\nrm -rf /usr/local/go\ntar -C /usr/local -xzf \"go$ver.linux-amd64.tar.gz\"\nrm -rf \"go$ver.linux-amd64.tar.gz\"\necho 'export GOROOT=/usr/local/go' >> $HOME/.bash_profile\necho 'export GOPATH=$HOME/go' >> $HOME/.bash_profile\necho 'export GO111MODULE=on' >> $HOME/.bash_profile\necho 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin' >> $HOME/.bash_profile\nsource $HOME/.bash_profile\ngo ve\n\n## Installing CLI from Source\n\n```shell\ncd $HOME\ngit clone https://github.com/Layr-Labs/eigenlayer-cli.git\ncd eigenlayer-cli\nmkdir -p build\ngo build -o build/eigenlayer cmd/eigenlayer/main.go\ncd $HOME\ncp eigenlayer-cli/build/eigenlayer /usr/local/bin/\n"})}),"\n",(0,a.jsx)(n.h2,{id:"create-and-list-keys",children:"Create and List Keys"}),"\n",(0,a.jsx)(n.h3,{id:"creating-new-key",children:"Creating New Key"}),"\n",(0,a.jsx)(n.p,{children:"We create two keys here. If you have installed it before, proceed to the import step."}),"\n",(0,a.jsxs)(n.p,{children:["The areas you need to change are written below:\n",(0,a.jsx)(n.code,{children:"KEY_NAME"}),": your key name. Give your key a name."]}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Enter the codes below one by one, set your password and keep the outputs in a safe place."})}),"\n",(0,a.jsx)(n.h4,{id:"create-ecdsa-key",children:"Create ECDSA Key"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator keys create --key-type ecdsa KEY_NAME\n"})}),"\n",(0,a.jsx)(n.h4,{id:"create-bls-key",children:"Create BLS Key"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator keys create --key-type bls KEY_NAME\n"})}),"\n",(0,a.jsx)(n.h3,{id:"import-keys",children:"Import Keys"}),"\n",(0,a.jsxs)(n.p,{children:["The areas you need to change are written below:\n",(0,a.jsx)(n.code,{children:"KEY_NAME"}),": your key name. Give your key a name.\n",(0,a.jsx)(n.code,{children:"PRIV_KEY"}),": private key of your key"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator keys import --key-type ecdsa KEY_NAME PRIV_KEY\neigenlayer operator keys import --key-type bls KEY_NAME PRIV_KEY\n"})}),"\n",(0,a.jsx)(n.h3,{id:"listing-keys",children:"Listing Keys"}),"\n",(0,a.jsx)(n.p,{children:"This is the command you can use to retrieve a list of the keys you have created with the EigenLayer cli tool."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator keys list\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"Save your Ethereum address or import it in your wallet. We will request testnet ETH to this wallet."})}),"\n",(0,a.jsx)(n.h3,{id:"export-keys",children:"Export keys"}),"\n",(0,a.jsx)(n.p,{children:"If you want to see the private key of the existing keys, you can use the below command. This will only work if your keys are in default location (~/.eigenlayer/operator_keys)"}),"\n",(0,a.jsx)(n.h4,{id:"export-ecdsa-key",children:"Export ECDSA Key"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator keys export --key-type ecdsa KEY_NAME\n"})}),"\n",(0,a.jsx)(n.h4,{id:"export-bls-key",children:"Export BLS Key"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator keys export --key-type bls KEY_NAME\n"})}),"\n",(0,a.jsx)(n.h2,{id:"obtaining-hole\u0161ky-eth",children:"Obtaining Hole\u0161ky ETH"}),"\n",(0,a.jsxs)(n.p,{children:["Obtain test ETH using (PoW Faucet)[",(0,a.jsx)(n.a,{href:"https://holesky-faucet.pk910.de/",children:"https://holesky-faucet.pk910.de/"}),"]."]}),"\n",(0,a.jsx)(n.h2,{id:"operator-registration",children:"Operator Registration"}),"\n",(0,a.jsx)(n.h3,{id:"creating-config-files",children:"Creating Config Files"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator config create\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["In the ",(0,a.jsx)(n.code,{children:"Would you like to populate config files"})," question, first press ",(0,a.jsx)(n.code,{children:"y"})," and then press ",(0,a.jsx)(n.code,{children:"enter"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["In the ",(0,a.jsx)(n.code,{children:"Enter your operator address"})," and ",(0,a.jsx)(n.code,{children:"Enter your earning address"})," questions, type ",(0,a.jsx)(n.code,{children:"your Ethereum address"})," given when creating the ECDSA key."]}),"\n",(0,a.jsxs)(n.li,{children:["In the ",(0,a.jsx)(n.code,{children:"Enter your ETH rpc url:"})," question, type: ",(0,a.jsx)(n.code,{children:"https://ethereum-holesky-rpc.publicnode.com"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"In the Enter your ecdsa key path"})," question, type the path specified in the output when you entered the ",(0,a.jsx)(n.code,{children:"eigenlayer operator keys list"})," code above."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"create-metadatajson-file",children:"Create metadata.json File"}),"\n",(0,a.jsx)(n.p,{children:"Create a metadata.json file with the codes below and upload this file to github or if you have a site, where it can be accessed by everyone. You can use your github account for this."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'{\n  "name": "YOUR_OPERATOR_NAME",\n  "website": "YOUR_WEBSITE_ADDRESS",\n  "description": "DESCRIPTON_SLOGAN_ETC",\n  "logo": "YOUR_LOGO_LINK",\n  "twitter": "YOUR_TWITTER_ADDRESS"\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"edit-operatoryaml-file",children:"Edit operator.yaml File"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"nano operator.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In this file, we only edit the following section.\nWe add the ",(0,a.jsx)(n.code,{children:"link to the metadata.json file"})," we created above."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'.\n.\n.\nmetadata_url: "https://your-address.com/metadata.json"\n.\n.\n.\n'})}),"\n",(0,a.jsx)(n.h3,{id:"registration",children:"Registration"}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"MAKE SURE YOU HAVE ETH IN YOUR WALLET BEFORE GOING TO THE NEXT STEP."})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator register operator.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["After entering this code, we wait a bit. Once the transaction is successful it will give us our TX Hash id. You can check this in (explorer)[",(0,a.jsx)(n.a,{href:"https://holesky.etherscan.io/",children:"https://holesky.etherscan.io/"}),"]."]}),"\n",(0,a.jsxs)(n.p,{children:["After a while, your operator will start to appear at (this address)[",(0,a.jsx)(n.a,{href:"https://holesky.eigenlayer.xyz/operator",children:"https://holesky.eigenlayer.xyz/operator"}),"]."]}),"\n",(0,a.jsx)(n.h2,{id:"checking-status-of-registration",children:"Checking Status of Registration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator status operator.yaml\n"})}),"\n",(0,a.jsx)(n.h2,{id:"metadata-updates",children:"Metadata Updates"}),"\n",(0,a.jsx)(n.p,{children:"If you update your metadata.json file to make a change in your operator information. Perform this update on the network with the code below."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"eigenlayer operator update operator.yaml\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},7845:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/EigenLayer-Service-Cover-6db45b40f02a21b64896597432ad1e3a.jpg"},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>l});var a=t(7294);const i={},r=a.createContext(i);function l(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);