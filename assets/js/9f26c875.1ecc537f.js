"use strict";(self.webpackChunkservice=self.webpackChunkservice||[]).push([[1262],{2894:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});var s=t(5893),i=t(1151);const a={title:"\ud83d\udcbe Installation",description:"Orbit quests guide.",image:"./img/Orbit-Service-Cover.jpg",keywords:["Orbit","ao","data","Permaweb","installation"],sidebar_position:1},l="Orbit Quests Guide",r={id:"Testnet/orbit/installation",title:"\ud83d\udcbe Installation",description:"Orbit quests guide.",source:"@site/docs/Testnet/orbit/installation.md",sourceDirName:"Testnet/orbit",slug:"/Testnet/orbit/installation",permalink:"/docs/Testnet/orbit/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/AnatolianTeam/Anatolian-Team-Services/tree/master/docs/Testnet/orbit/installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\ud83d\udcbe Installation",description:"Orbit quests guide.",image:"./img/Orbit-Service-Cover.jpg",keywords:["Orbit","ao","data","Permaweb","installation"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Orbit",permalink:"/docs/Testnet/orbit/"},next:{title:"Penumbra Zone",permalink:"/docs/Testnet/penumbra/"}},d={image:t(8739).Z},o=[{value:"Updating the System",id:"updating-the-system",level:2},{value:"NodeJS and NVM",id:"nodejs-and-nvm",level:2},{value:"Installing NodeJS",id:"installing-nodejs",level:3},{value:"Installing NVM",id:"installing-nvm",level:3},{value:"Installing the AO",id:"installing-the-ao",level:2},{value:"Price Feed Bot",id:"price-feed-bot",level:2},{value:"Learning Process ID",id:"learning-process-id",level:3},{value:"Creating 0rbit-Price-Feed.lua File",id:"creating-0rbit-price-feedlua-file",level:3},{value:"Loading the Process",id:"loading-the-process",level:3},{value:"Running the Monitor",id:"running-the-monitor",level:3},{value:"Checking the ETH Price",id:"checking-the-eth-price",level:3},{value:"Cloning The Repo",id:"cloning-the-repo",level:3},{value:"NEWS Feed Bot",id:"news-feed-bot",level:2},{value:"Learning Process ID",id:"learning-process-id-1",level:3},{value:"Creating 0rbit-News-Feed.lua File",id:"creating-0rbit-news-feedlua-file",level:3},{value:"Loading the Process",id:"loading-the-process-1",level:3},{value:"Running the Monitor",id:"running-the-monitor-1",level:3},{value:"Checking the News Feed",id:"checking-the-news-feed",level:3},{value:"Send PR the Repo",id:"send-pr-the-repo",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"orbit-quests-guide",children:"Orbit Quests Guide"}),"\n",(0,s.jsx)(n.h2,{id:"updating-the-system",children:"Updating the System"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"apt update && apt upgrade -y\n"})}),"\n",(0,s.jsx)(n.h2,{id:"nodejs-and-nvm",children:"NodeJS and NVM"}),"\n",(0,s.jsx)(n.h3,{id:"installing-nodejs",children:"Installing NodeJS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl -sL https://deb.nodesource.com/setup_21.x | sudo -E bash -\napt-get install -y nodejs\napt update -y && apt upgrade -y\n"})}),"\n",(0,s.jsx)(n.h3,{id:"installing-nvm",children:"Installing NVM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\nsource ~/.bashrc\nnvm install 22\nnvm use v22.2.0\nnpm install -g npm@latest\n"})}),"\n",(0,s.jsx)(n.h2,{id:"installing-the-ao",children:"Installing the AO"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm i -g https://get_ao.g8way.io\n"})}),"\n",(0,s.jsx)(n.h1,{id:"quests",children:"Quests"}),"\n",(0,s.jsx)(n.h2,{id:"price-feed-bot",children:"Price Feed Bot"}),"\n",(0,s.jsx)(n.h3,{id:"learning-process-id",children:"Learning Process ID"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"aos orbit --cron 30-seconds\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-0rbit-price-feedlua-file",children:"Creating 0rbit-Price-Feed.lua File"}),"\n",(0,s.jsx)(n.p,{children:"Write the Process ID (PID) and GITHUB username in the values \u200b\u200bbelow."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"PID=YOUR_PROCESS_ID\nGITHUB=YOUR_GIHUB_HANDLE\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'tee $HOME/0rbit-Price-Feed.lua > /dev/null << EOF\n-- PID $PID\n\nlocal json = require("json")\n\n_ORBIT = "WSXUI2JjYUldJ7CKq9wE1MGwXs-ldzlUlHOQszwQe0s"\n\nfunction handleError(msg, errorMessage)\n    ao.send({\n        Target = msg.From,\n        Tags = {\n            Action = "Error",\n            ["Message-Id"] = msg.Id,\n            Error = errorMessage\n        }\n    })\nend\n\nHandlers.add("$GITHUB",\n    Handlers.utils.hasMatchingTag("Action", "Sponsored-Get-Request"),\n    function(msg)\n        local token = msg.Tags.Token\n        if not token then\n            handleError(msg, "Token not provided")\n            return\n        end\n        \n        local url = "https://api.coingecko.com/api/v3/simple/price?ids=" .. token .. "&vs_currencies=usd"\n        ao.send({\n            Target = _ORBIT,\n            Action = "Get-Real-Data",\n            Url = url\n        })\n        print("Pricefetch request sent for " .. token)\n    end\n)\n\nHandlers.add("ReceiveData",\n    Handlers.utils.hasMatchingTag("Action", "Receive-Response"),\n    function(msg)\n        print("Received data: " .. msg.Data)\n        local res = json.decode(msg.Data)\n        local token = msg.Tags.Token\n        if res[token] and res[token].usd then\n            ao.send({\n                Target = msg.From,\n                Tags = {\n                    Action = "Price-Response",\n                    ["Message-Id"] = msg.Id,\n                    Price = res[token].usd\n                }\n            })\n            print("Price of " .. token .. " is " .. res[token].usd)\n        else\n            handleError(msg, "Failed to fetch price")\n        end\n    end\n)\nEOF\n'})}),"\n",(0,s.jsx)(n.h3,{id:"loading-the-process",children:"Loading the Process"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:".load 0rbit-Price-Feed.lua\n"})}),"\n",(0,s.jsx)(n.h3,{id:"running-the-monitor",children:"Running the Monitor"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:".monitor\n"})}),"\n",(0,s.jsx)(n.h3,{id:"checking-the-eth-price",children:"Checking the ETH Price"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'Send({ Target = ao.id, Action="Sponsored-Get-Request", Tags = { Token = "ethereum" }})\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cloning-the-repo",children:"Cloning The Repo"}),"\n",(0,s.jsxs)(n.p,{children:["After cloning the ",(0,s.jsx)(n.a,{href:"https://github.com/0rbit-co/quest",children:"repo"}),", create a folder named ",(0,s.jsx)(n.code,{children:"price-feed-bot-GithubUsername"}),", add the image of the output of the last code and your ",(0,s.jsx)(n.code,{children:"0rbit-Price-Feed.lua"})," file."]}),"\n",(0,s.jsx)(n.h2,{id:"news-feed-bot",children:"NEWS Feed Bot"}),"\n",(0,s.jsx)(n.h3,{id:"learning-process-id-1",children:"Learning Process ID"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"aos 0rbitNewsFeed --cron 30-seconds\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-0rbit-news-feedlua-file",children:"Creating 0rbit-News-Feed.lua File"}),"\n",(0,s.jsx)(n.p,{children:"Write the Process ID (PID) in the values \u200b\u200bbelow."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"PID=YOUR_PROCESS_ID\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'tee $HOME/0rbit-News-Feed.lua > /dev/null << EOF\n-- ao.id $PID\n\nlocal json = require("json")\nlocal _0RBIT = "WSXUI2JjYUldJ7CKq9wE1MGwXs-ldzlUlHOQszwQe0s"\nlocal URL = "https://api.theblockbeats.news/v1/open-api/open-flash?size=5&page=1&type=push"\nReceivedData = ReceivedData or {}\n\nHandlers.add(\n    "Get-Request",\n    Handlers.utils.hasMatchingTag("Action", "Sponsored-Get-Request"),\n    function(msg)\n         Send({\n             Target = _0RBIT,\n             Action = "Get-Real-Data",\n             Url = URL\n        })\n        print("GET Request sent to the 0rbit process.")\n    end\n)\n\nHandlers.add(\n    "Receive-Data",\n    Handlers.utils.hasMatchingTag("Action", "Receive-Response"),\n    function(msg)\n        if not msg.Data then\n            print("No data received.")\n            return\n        end\n\n        local res = json.decode(msg.Data)\n\n        ReceivedData1 = res.data.data\n        local extractedData = {}\n        for k, v in ipairs(ReceivedData1) do\n                table.insert(extractedData, {\n                    title = v.title,\n                    description = v.content\n                })\n            ReceivedData = extractedData\n\n        end\n        print("Processed data: " .. json.encode(ReceivedData1))\n    end\n)\n\nlocal function getLatestData(msg)\n    local data = json.encode(ReceivedData)\n    Handlers.utils.reply(data)(msg)\n    print("Latest data sent: " .. data)\nend\n\nHandlers.add(\n    "GetLatestData",\n    Handlers.utils.hasMatchingTag("Action", "Get-Latest-Data"),\n    getLatestData\n)\n\nlocal function fetchNewsPeriodically()\n     Send({\n         Target = _0RBIT,\n         Action = "Get-Real-Data",\n         Url = URL\n     })\n    print("Periodic GET Request sent to the 0rbit process.")\nend\n\nHandlers.add(\n    "CronTick",\n    Handlers.utils.hasMatchingTag("Action", "Cron"),\n    fetchNewsPeriodically\n)\nEOF\n'})}),"\n",(0,s.jsx)(n.h3,{id:"loading-the-process-1",children:"Loading the Process"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:".load 0rbit-News-Feed.lua\n"})}),"\n",(0,s.jsx)(n.h3,{id:"running-the-monitor-1",children:"Running the Monitor"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:".monitor\n"})}),"\n",(0,s.jsx)(n.h3,{id:"checking-the-news-feed",children:"Checking the News Feed"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'Send({ Target = ao.id, Action="Sponsored-Get-Request"})\n'})}),"\n",(0,s.jsx)(n.h3,{id:"send-pr-the-repo",children:"Send PR the Repo"}),"\n",(0,s.jsxs)(n.p,{children:["After cloning the ",(0,s.jsx)(n.a,{href:"https://github.com/0rbit-co/quest",children:"repo"}),", create a folder named ",(0,s.jsx)(n.code,{children:"news-feed-bot-GithubUsername"}),", add the image of the output of the last code and your ",(0,s.jsx)(n.code,{children:"0rbit-Price-Feed.lua"})," file, and then send a PR."]}),"\n",(0,s.jsxs)(n.p,{children:["In the repo cloned in the first task, create a folder named ",(0,s.jsx)(n.code,{children:"news-feed-bot-GithubUsername"})," and add the image of the output of the last code and your ",(0,s.jsx)(n.code,{children:"0rbit-News-Feed.lua"})," file."]}),"\n",(0,s.jsx)(n.p,{children:"Finally, send PR."})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8739:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/Orbit-Service-Cover-94673db68a824de7112a08120f8d256b.jpg"},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>l});var s=t(7294);const i={},a=s.createContext(i);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);