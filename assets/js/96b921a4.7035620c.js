"use strict";(self.webpackChunkservice=self.webpackChunkservice||[]).push([[9207],{8991:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=t(5893),r=t(1151);const a={title:"\ud83d\udcbe Installation",description:"Node installation guide.",image:"./img/Penumbra-Service-Cover.jpg",keywords:["penumbra","installation","snapshot","statesync","update"]},l="Installation",o={id:"Testnet/penumbra/installation",title:"\ud83d\udcbe Installation",description:"Node installation guide.",source:"@site/docs/Testnet/penumbra/installation.md",sourceDirName:"Testnet/penumbra",slug:"/Testnet/penumbra/installation",permalink:"/docs/Testnet/penumbra/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/AnatolianTeam/Anatolian-Team-Services/tree/master/docs/Testnet/penumbra/installation.md",tags:[],version:"current",frontMatter:{title:"\ud83d\udcbe Installation",description:"Node installation guide.",image:"./img/Penumbra-Service-Cover.jpg",keywords:["penumbra","installation","snapshot","statesync","update"]},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udf8a Ceremony",permalink:"/docs/Testnet/penumbra/ceromony"},next:{title:"\ud83c\udd99 Update",permalink:"/docs/Testnet/penumbra/update"}},s={image:t(4113).Z},d=[{value:"Updating the System",id:"updating-the-system",level:2},{value:"Installing the Necessary Libraries",id:"installing-the-necessary-libraries",level:2},{value:"Installing Go",id:"installing-go",level:2},{value:"Penumbra Command Line Interface (CLI) Installation",id:"penumbra-command-line-interface-cli-installation",level:2},{value:"Creating a Penumbra Wallet",id:"creating-a-penumbra-wallet",level:2},{value:"Set up Penumbra and CometBFT.",id:"set-up-penumbra-and-cometbft",level:2},{value:"Validator Configuration:",id:"validator-configuration",level:2},{value:"Validator Registration:",id:"validator-registration",level:2},{value:"Delegation on the Validator Node:",id:"delegation-on-the-validator-node",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.h2,{id:"updating-the-system",children:"Updating the System"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"apt update && apt upgrade -y\n"})}),"\n",(0,i.jsx)(n.h2,{id:"installing-the-necessary-libraries",children:"Installing the Necessary Libraries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'apt install make clang pkg-config libssl-dev libclang-dev build-essential git curl ntp wget jq llvm tmux htop screen unzip gcc lz4 -y < "/dev/null"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"installing-go",children:"Installing Go"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"ver=\"1.21.6\"\nwget \"https://golang.org/dl/go$ver.linux-amd64.tar.gz\"\nrm -rf /usr/local/go\ntar -C /usr/local -xzf \"go$ver.linux-amd64.tar.gz\"\nrm -rf \"go$ver.linux-amd64.tar.gz\"\necho 'export GOROOT=/usr/local/go' >> $HOME/.bash_profile\necho 'export GOPATH=$HOME/go' >> $HOME/.bash_profile\necho 'export GO111MODULE=on' >> $HOME/.bash_profile\necho 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin' >> $HOME/.bash_profile\nsource $HOME/.bash_profile\ngo version\n"})}),"\n",(0,i.jsx)(n.h2,{id:"penumbra-command-line-interface-cli-installation",children:"Penumbra Command Line Interface (CLI) Installation"}),"\n",(0,i.jsx)(n.p,{children:"Requirements: Ubuntu version 22.04"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Important Note: This guide assumes you're comfortable using the command line."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"curl --proto '=https' --tlsv1.2 -LsSf https://github.com/penumbra-zone/penumbra/releases/download/v0.77.2/pcli-installer.sh | sh\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"source $HOME/.cargo/env\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Please confirm that the Command Line Interface (CLI) installation has been successfully finalized."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli --version\n"})}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-penumbra-wallet",children:"Creating a Penumbra Wallet"}),"\n",(0,i.jsx)(n.p,{children:"Utilizing the CLI, you'll initiate the wallet generation."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli init soft-kms generate\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"As you go through the process, a private key (Private Seed) will be generated. It's crucial to safeguard this key diligently, as it serves as a lifeline in the unfortunate event of losing access to your wallet."})}),"\n",(0,i.jsx)(n.p,{children:"To locate your wallet address, employ the subsequent command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli view address\n"})}),"\n",(0,i.jsx)(n.p,{children:"Should you need to import a wallet you've previously generated:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli init soft-kms import-phrase\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Head over to the ",(0,i.jsx)(n.a,{href:"https://discord.gg/2Ez55n4txb",children:"Penumbra Discord"})," to redeem faucet tokens for the wallet you've generated."]}),"\n",(0,i.jsx)(n.p,{children:"Insert your wallet address into the #-testnet-faucet channel."}),"\n",(0,i.jsx)(n.p,{children:"Check your wallet balance:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli view sync\npcli view balance\n"})}),"\n",(0,i.jsx)(n.h2,{id:"set-up-penumbra-and-cometbft",children:"Set up Penumbra and CometBFT."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"curl -sSfL -O https://github.com/penumbra-zone/penumbra/releases/download/v0.77.2/pd-x86_64-unknown-linux-gnu.tar.gz\ntar -xf pd-x86_64-unknown-linux-gnu.tar.gz\nmv pd-x86_64-unknown-linux-gnu/pd /usr/local/bin/\n"})}),"\n",(0,i.jsx)(n.p,{children:"Confirm the successful installation of Penumbra:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pd --version\n"})}),"\n",(0,i.jsx)(n.p,{children:"Install CometBFT to ensure the smooth operation of the node alongside Penumbra."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'echo export GOPATH=\\"\\$HOME/go\\" >> ~/.bash_profile\necho export PATH=\\"\\$PATH:\\$GOPATH/bin\\" >> ~/.bash_profile\nsource ~/.bash_profile\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"git clone --branch v0.37.5 https://github.com/cometbft/cometbft.git\ncd cometbft\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"make install\n"})}),"\n",(0,i.jsx)(n.p,{children:"Verify the successful installation of CometBFT:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cometbft version\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initialize the configuration files to commence the Full Node:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pd testnet unsafe-reset-all\n"})}),"\n",(0,i.jsx)(n.p,{children:'Next, initialize the node, substituting "IP" with the IP address of your VPS and "NAME" with the desired name for your node:'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pd testnet join --external-address IPADDRESS:26656 --moniker NAME\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pd testnet join --external-address 123.456.78:26656 --moniker Anatolian Team\n"})}),"\n",(0,i.jsx)(n.p,{children:"You'll create a file to run your Penumbra node in the background:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"tee /etc/systemd/system/penumbra.service > /dev/null <<EOF\n[Unit]\nDescription=Penumbra Node\nAfter=network.target\n[Service]\nUser=root\nExecStart=/root/.cargo/bin/pd start\nRestart=always\nRestartSec=3\nLimitNOFILE=infinity\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,i.jsx)(n.p,{children:"Subsequently, initiate your Penumbra node:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"systemctl daemon-reload\nsystemctl enable penumbra\nsystemctl start penumbra\n"})}),"\n",(0,i.jsx)(n.p,{children:"To ensure your node is functioning correctly:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"journalctl -fu penumbra -n 50\n"})}),"\n",(0,i.jsx)(n.p,{children:"Please be aware that your node won't operate until the CometBFT node is activated."}),"\n",(0,i.jsx)(n.p,{children:"Once Penumbra is launched, establish a new file to initiate the CometBFT node, essential for Penumbra's functionality:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"tee /etc/systemd/system/cometbft.service > /dev/null <<EOF\n[Unit]\nDescription=Cometbft Node\nAfter=network.target\n[Service]\nUser=root\nExecStart=/root/go/bin/cometbft start --home root/.penumbra/testnet_data/node0/cometbft\nRestart=always\nRestartSec=3\nLimitNOFILE=infinity\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initiate your CometBFT node:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"systemctl daemon-reload\nsystemctl enable cometbft\nsystemctl start cometbft\n"})}),"\n",(0,i.jsx)(n.p,{children:"To check if your node is working correctly:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"journalctl -fu cometbft -n 50\n"})}),"\n",(0,i.jsx)(n.p,{children:"Once CometBFT is launched, your Penumbra node will start automatically."}),"\n",(0,i.jsx)(n.h2,{id:"validator-configuration",children:"Validator Configuration:"}),"\n",(0,i.jsx)(n.p,{children:"If you wish to convert your full node into a validator node, you'll need to furnish a configuration file and delegate an adequate number of tokens for your validator node to activate."}),"\n",(0,i.jsx)(n.p,{children:"Begin by identifying the value of your consensus_key:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"grep -A3 pub_key ~/.penumbra/testnet_data/node0/cometbft/config/priv_validator_key.json\n"})}),"\n",(0,i.jsx)(n.p,{children:"Keep this value handy as you'll need it to complete your configuration file."}),"\n",(0,i.jsx)(n.p,{children:"Generate your configuration file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli validator definition template \\\n    --tendermint-validator-keyfile ~/.penumbra/testnet_data/node0/cometbft/config/priv_validator_key.json \\\n    --file validator.toml\n"})}),"\n",(0,i.jsx)(n.p,{children:"You will be able to customize your validator file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"nano validator.toml\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/AnatolianTeam/Anatolian-Team-Services/assets/107190154/c297d632-23ac-443e-9085-e5100f29c698",alt:"Ads\u0131z tasar\u0131m (6)"})}),"\n",(0,i.jsx)(n.p,{children:'Edit the configuration file by replacing the placeholder "value" in "consensus_key" with the actual value you obtained earlier, and update "enabled = false" to "enabled = true".'}),"\n",(0,i.jsx)(n.h2,{id:"validator-registration",children:"Validator Registration:"}),"\n",(0,i.jsx)(n.p,{children:"Now that you've configured the validator.toml file, you're ready to register your validator:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli validator definition upload --file validator.toml\n"})}),"\n",(0,i.jsx)(n.h2,{id:"delegation-on-the-validator-node",children:"Delegation on the Validator Node:"}),"\n",(0,i.jsx)(n.p,{children:"To activate your validator, you'll need to delegate faucet tokens."}),"\n",(0,i.jsx)(n.p,{children:"Begin by identifying the address of your validator:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli validator identity\n"})}),"\n",(0,i.jsx)(n.p,{children:"Delegate faucet tokens from Penumbra to your validator:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli tx delegate 1penumbra --to [YOUR_VALIDATOR_IDENTITY_KEY]\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can verify how many tokens you have delegated :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli view balance\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can verify that your validator node is active by searching for it in the list :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pcli query validator list --detailed\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},4113:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/Penumbra-Service-Cover-9b8346501f1f076cba2beda8f0510843.jpg"},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var i=t(7294);const r={},a=i.createContext(r);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);