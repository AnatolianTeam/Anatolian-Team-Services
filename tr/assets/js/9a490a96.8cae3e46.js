"use strict";(self.webpackChunkservice=self.webpackChunkservice||[]).push([[1710],{17045:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=i(85893),t=i(11151);const r={title:"\ud83d\udd17 EVMRollapp",description:"EVMRollapp Installation Guide.",image:"./img/Airchains-Service-Cover.jpg",keywords:["airchains","chain","evm","rollapp"]},a=void 0,o={id:"Testnet/Cosmos-Ecosystem/airchains/EVMRollapp",title:"\ud83d\udd17 EVMRollapp",description:"EVMRollapp Installation Guide.",source:"@site/docs/Testnet/Cosmos-Ecosystem/airchains/EVMRollapp.md",sourceDirName:"Testnet/Cosmos-Ecosystem/airchains",slug:"/Testnet/Cosmos-Ecosystem/airchains/EVMRollapp",permalink:"/tr/docs/Testnet/Cosmos-Ecosystem/airchains/EVMRollapp",draft:!1,unlisted:!1,editUrl:"https://github.com/AnatolianTeam/Anatolian-Team-Services/tree/master/docs/Testnet/Cosmos-Ecosystem/airchains/EVMRollapp.md",tags:[],version:"current",frontMatter:{title:"\ud83d\udd17 EVMRollapp",description:"EVMRollapp Installation Guide.",image:"./img/Airchains-Service-Cover.jpg",keywords:["airchains","chain","evm","rollapp"]},sidebar:"tutorialSidebar",previous:{title:"Airchains",permalink:"/tr/docs/Testnet/Cosmos-Ecosystem/airchains/"},next:{title:"\ud83d\udcbe Kurulum",permalink:"/tr/docs/Testnet/Cosmos-Ecosystem/airchains/installation"}},c={image:i(5638).Z},l=[{value:"1. System Update and Package Installation",id:"1-system-update-and-package-installation",level:3},{value:"2. Configuring Evm-Station",id:"2-configuring-evm-station",level:3},{value:"3. Setting Up Avail DA",id:"3-setting-up-avail-da",level:3},{value:"4. Setting Up the Tracker",id:"4-setting-up-the-tracker",level:3},{value:"Creating an Airchain Wallet and Starting Your Station",id:"creating-an-airchain-wallet-and-starting-your-station",level:2},{value:"1. Create an Airchain Wallet:",id:"1-create-an-airchain-wallet",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Hardware Prerequisites"})}),"\n",(0,s.jsx)(n.p,{children:"For optimal performance, your system should possess the following specifications:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Component"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Recommended Specification"})})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"CPU"}),(0,s.jsx)(n.td,{children:"4 Cores"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"RAM"}),(0,s.jsx)(n.td,{children:"8 GB"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Storage"}),(0,s.jsx)(n.td,{children:"200 GB"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"1-system-update-and-package-installation",children:"1. System Update and Package Installation"}),"\n",(0,s.jsx)(n.p,{children:"Begin by updating your system and installing the required packages:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd $HOME && source <(curl -s https://raw.githubusercontent.com/AnatolianTeam/scripts/main/install.sh)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Next, clone the necessary repositories from GitHub:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/airchains-network/evm-station.git\ngit clone https://github.com/airchains-network/tracks.git\ngit clone https://github.com/availproject/availup.git\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-configuring-evm-station",children:"2. Configuring Evm-Station"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"A. Launching a Screen Session and Navigation"})}),"\n",(0,s.jsxs)(n.p,{children:['Start a new screen session named "evmstation" and navigate to the ',(0,s.jsx)(n.code,{children:"evm-station"})," directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"screen -S evmstation\ncd evm-station\ngo mod tidy\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"B. Modifying Moniker and Chain ID (Optional)"})}),"\n",(0,s.jsxs)(n.p,{children:["If you desire to customize your chain's moniker or chain ID, edit the setup script using the ",(0,s.jsx)(n.code,{children:"nano"})," text editor:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"nano ./scripts/local-setup.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Make the necessary changes within the file."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C. Setting Up and Starting Evm-Station"})}),"\n",(0,s.jsx)(n.p,{children:"Execute the following commands in sequence to set up and launch Evm-Station:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/bin/bash ./scripts/local-setup.sh\n/bin/bash ./scripts/local-start.sh\n/bin/bash ./scripts/local-keys.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"D. Configuring Custom Ports (Optional)"})}),"\n",(0,s.jsx)(n.p,{children:"If you prefer to use custom port numbers, follow these steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Set an environment variable named ",(0,s.jsx)(n.code,{children:"G_PORT"})," with your desired port number:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'echo "export G_PORT=27" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'sed -i.bak -e "s%:1317%:${G_PORT}317%g;\ns%:8080%:${G_PORT}080%g;\ns%:9090%:${G_PORT}090%g;\ns%:9091%:${G_PORT}091%g;\ns%:8545%:${G_PORT}545%g;\ns%:8546%:${G_PORT}546%g;\ns%:6065%:${G_PORT}065%g" $HOME/.evmosd/config/app.toml\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'sed -i.bak -e "s%:26658%:${G_PORT}658%g;\ns%:26657%:${G_PORT}657%g;\ns%:6060%:${G_PORT}060%g;\ns%:26656%:${G_PORT}656%g;\ns%^external_address = \\"\\"%external_address = \\"$(wget -qO- eth0.me):${G_PORT}656\\"%;\ns%:26660%:${G_PORT}660%g" $HOME/.evmosd/config/config.toml\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Update configuration files with the new port numbers using the ",(0,s.jsx)(n.code,{children:"sed"})," command. This replaces default port numbers with your chosen ",(0,s.jsx)(n.code,{children:"G_PORT"})," value."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"E. Editing app.toml for External Connections"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.code,{children:"app.toml"})," file located in ",(0,s.jsx)(n.code,{children:"$HOME/.evmosd/config/app.toml"})," using your preferred text editor (e.g., ",(0,s.jsx)(n.code,{children:"nano"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Locate the line containing ",(0,s.jsx)(n.code,{children:"127.0.0.1"})," and change it to ",(0,s.jsx)(n.code,{children:"0.0.0.0"})," to allow external connections."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-setting-up-avail-da",children:"3. Setting Up Avail DA"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"A. Launching a Screen Session and Navigation"})}),"\n",(0,s.jsxs)(n.p,{children:['Start a new screen session named "avail" and navigate to the ',(0,s.jsx)(n.code,{children:"availup"})," directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'screen -S avail\ncd availup\n/bin/bash availup.sh --network "turing" --app_id 36\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"B. Detaching from the Screen Session"})}),"\n",(0,s.jsxs)(n.p,{children:["Once the setup is complete, detach from the screen session using ",(0,s.jsx)(n.code,{children:"ctrl + a + d"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C. Retrieving Avail Address and Seed Phrase"})}),"\n",(0,s.jsxs)(n.p,{children:["View your Avail address and seed phrase by opening the ",(0,s.jsx)(n.code,{children:"identity.toml"})," file located at ",(0,s.jsx)(n.code,{children:"/root/.avail/identity/identity.toml"})," with a text editor."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Important Note:"})," Keep your seed phrase confidential, as it grants access to your Avail account."]}),"\n",(0,s.jsx)(n.h3,{id:"4-setting-up-the-tracker",children:"4. Setting Up the Tracker"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"A. Launching a Screen Session for Tracking"})}),"\n",(0,s.jsx)(n.p,{children:'Start a new screen session named "track" for managing the tracker.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"screen -S track\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"B. Initializing Tracking Configuration"})}),"\n",(0,s.jsxs)(n.p,{children:["Navigate to the ",(0,s.jsx)(n.code,{children:"tracks"})," directory and initialize tracking with your configurations using the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'go run cmd/main.go init --daRpc "http://127.0.0.1:7000" --daKey "AVAIL-PUB-KEY" --daType "avail"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"creating-an-airchain-wallet-and-starting-your-station",children:"Creating an Airchain Wallet and Starting Your Station"}),"\n",(0,s.jsx)(n.p,{children:"Here's a detailed breakdown of creating an Airchain wallet and starting your station:"}),"\n",(0,s.jsx)(n.h3,{id:"1-create-an-airchain-wallet",children:"1. Create an Airchain Wallet:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Open your terminal and run the following command, replacing ",(0,s.jsx)(n.code,{children:'"NAME"'})," with your desired account name:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'go run cmd/main.go keys junction --accountName "NAME" --accountPath $HOME/.tracks/junction-accounts/keys\n'})}),"\n",(0,s.jsx)(n.p,{children:"This command creates a wallet associated with your Airchain network and stores the private key securely in the specified path."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"2. Obtain Test Tokens (Optional):"})}),"\n",(0,s.jsxs)(n.p,{children:["Visit the Airchains faucet at ",(0,s.jsx)(n.a,{href:"https://airchains.faucetme.pro/",children:"https://airchains.faucetme.pro/"})," to acquire test tokens for your newly created wallet. These tokens allow you to interact with the testnet without using real cryptocurrency."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"3. Run the Prover:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Execute the following command in your terminal:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"go run cmd/main.go prover v1EVM\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command starts the prover, which is responsible for generating proofs for transactions on your Airchain network."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"4. Retrieve Your Node ID:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Open the ",(0,s.jsx)(n.code,{children:"sequencer.toml"})," file located at ",(0,s.jsx)(n.code,{children:"/root/.tracks/config/sequencer.toml"})," using a text editor like ",(0,s.jsx)(n.code,{children:"nano"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"nano /root/.tracks/config/sequencer.toml\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Locate the line containing ",(0,s.jsx)(n.code,{children:'"node_id"'}),'. The value after the colon (":") is your node ID. You\'ll need this in the next step.']}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"5. Start Your Station:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Replace placeholders in the following command with your information:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'go run cmd/main.go create-station \\\n  --accountName "NAME" \\\n  --accountPath $HOME/.tracks/junction-accounts/keys \\\n  --jsonRPC "https://airchains-testnet-rpc.cosmonautstakes.com/" \\\n  --info "EVM Track" \\\n  --tracks your-airchain-address \\\n  --bootstrapNode "/ip4/your-server-ip4/tcp/2300/p2p/your-node-ID"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--accountName"}),": The same name you used while creating the wallet."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--accountPath"}),": The path where your wallet's private key is stored (from step 1)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--jsonRPC"}),": The RPC endpoint for the Airchains testnet (replace if using a different network)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--info"}),": A description for your station (optional)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--tracks"}),": Replace with your Airchain address obtained during wallet creation."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--bootstrapNode"}),": Update with your server IP address and the retrieved node ID from step 4."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"After running this command, execute the following command to start your station:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"go run cmd/main.go start\n"})}),"\n",(0,s.jsx)(n.p,{children:"This initiates your Airchain station, allowing you to participate in the network."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure you replace placeholders with your actual information in the commands."}),"\n",(0,s.jsx)(n.li,{children:"Double-check paths and IDs to avoid errors."}),"\n"]})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"6. Monitor Appchain (Optional):"})}),"\n",(0,s.jsxs)(n.p,{children:["You can monitor the activity on your appchain by visiting ",(0,s.jsx)(n.a,{href:"https://points.airchains.io/",children:"https://points.airchains.io/"}),". This dashboard provides insights into your station's performance and transactions."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"By following these steps, you'll successfully create an Airchain wallet, obtain test tokens (optional), and launch your own station on the Airchain network."})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5638:(e,n,i)=>{i.d(n,{Z:()=>s});const s=i.p+"assets/images/Airchains-Service-Cover-f1de8d48e4fd39509044babb9d7b7a83.jpg"},11151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>a});var s=i(67294);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);